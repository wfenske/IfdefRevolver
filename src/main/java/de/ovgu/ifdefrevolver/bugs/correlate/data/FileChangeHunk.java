package de.ovgu.ifdefrevolver.bugs.correlate.data;

import java.util.Date;

/**
 * A single change hunk to a file within a commit. There may be multiple such
 * hunks with the same commit hash and the same filename
 *
 * @author wfenske
 */
public class FileChangeHunk implements Comparable<FileChangeHunk> {

    private final String filename;
    private final String commitHash;
    private final Date commitDate;
    private final FileCommit fileCommit;

    /**
     * @param filename the name of the changed file
     * @param comHash  hash of the commit
     * @param comDate  date of the commit
     */
    public FileChangeHunk(String filename, String comHash, Date comDate) {
        this.filename = filename;
        this.commitHash = comHash;
        this.commitDate = comDate;
        this.fileCommit = new FileCommit(filename, comHash);
    }

    public Date getCommitDate() {
        return this.commitDate;
    }

    public String getCommitHash() {
        return this.commitHash;
    }

    /**
     * @return Name of the changed file
     */
    public String getFilename() {
        return this.filename;
    }

    @Override
    public int compareTo(FileChangeHunk obj) {
        if (obj.getCommitDate().after(this.getCommitDate()))
            return -1;
        else if (obj.getCommitDate().before(this.getCommitDate()))
            return 1;
        else {
            final int commitHashCmp = obj.getCommitHash().compareTo(this.getCommitHash());
            if (commitHashCmp != 0) {
                return commitHashCmp;
            } else {
                return obj.getFilename().compareTo(this.getFilename());
            }
        }

    }

    public FileCommit getFileCommit() {
        return fileCommit;
    }

    /*
     * generated by Eclipse
     */
    @Override
    public String toString() {
        return String.format("ChangedFile [name=%s, commitHash=%s, commitDate=%s]", filename, commitHash, commitDate);
    }

}
