package de.ovgu.skunk.bugs.eval.data;

/**
 * A commit to a file. Even if a commit makes multiple changes to a file (i.e.,
 * multiple hunks), then for all {@link FileCommit}s <code>c1, c2</code>
 * representing that change it will hold that <code>c1.equals(c2)</code>.
 * 
 * @author wfenske
 */
public class FileCommit {
    private String filename;
    private String commitHash;

    /**
     * @param filename
     *            the name of the changed file
     * @param comHash
     *            hash of the commit
     * @param comDate
     *            date of the commit
     */
    public FileCommit(String filename, String comHash) {
        this.filename = filename;
        this.commitHash = comHash;
    }

    public String getCommitHash() {
        return this.commitHash;
    }

    /**
     * @return Name of the changed file
     */
    public String getFilename() {
        return this.filename;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((commitHash == null) ? 0 : commitHash.hashCode());
        result = prime * result + ((filename == null) ? 0 : filename.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof FileCommit))
            return false;
        FileCommit other = (FileCommit) obj;
        if (commitHash == null) {
            if (other.commitHash != null)
                return false;
        } else if (!commitHash.equals(other.commitHash))
            return false;
        if (filename == null) {
            if (other.filename != null)
                return false;
        } else if (!filename.equals(other.filename))
            return false;
        return true;
    }

    /*
     * generated by Eclipse
     */
    @Override
    public String toString() {
        return String.format("FileCommit [commitHash=%s, name=%s]", commitHash, filename);
    }

}
